(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CursorNavigateComponent = /** @class */ (function () {
    function CursorNavigateComponent(object, navigateService) {
        this.object = object;
        this.navigateService = navigateService;
    }
    CursorNavigateComponent.prototype.init = function () {
        var self = this;
        AFRAME.registerComponent("cursor-navigate-component", {
            init: function () {
                this.el.addEventListener(self.object.onEvent, function (e) {
                    self.object.event = e;
                    self.navigateService.init(self.object);
                });
            }
        });
    };
    return CursorNavigateComponent;
}());
exports.CursorNavigateComponent = CursorNavigateComponent;

},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var IndexController = /** @class */ (function () {
    //private cursorColourChangeComponent: IComponent;
    function IndexController(
    //trackPadListenerComponent: IComponent,
    cursorNavigateComponent) {
        //this.trackPadListenerComponent = trackPadListenerComponent;
        this.cursorNavigateComponent = cursorNavigateComponent;
        //this.cursorColourChangeComponent = cursorColourChangeComponent;
    }
    IndexController.prototype.init = function () {
        // this.trackPadListenerComponent.init();
        this.cursorNavigateComponent.init();
        // this.cursorColourChangeComponent.init();
    };
    return IndexController;
}());
exports.IndexController = IndexController;

},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NavigateModel = /** @class */ (function () {
    function NavigateModel(cameraId, yConstraint, onEvent) {
        this.cameraId = cameraId;
        this.yConstraint = yConstraint;
        this.onEvent = onEvent;
    }
    return NavigateModel;
}());
exports.NavigateModel = NavigateModel;

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NavigateService = /** @class */ (function () {
    function NavigateService() {
    }
    NavigateService.prototype.init = function (object) {
        var camera = document.querySelector("#" + object.cameraId);
        if (camera !== null) {
            var coords = object.event.detail.intersection.point, offset = 0.70, x = coords.x, y = !object.yConstraint ? coords.y : 0.0, z = coords.z + offset;
            camera.setAttribute("animation", "property: position; dir: alternate; dur: 2000; easing: easeInOutSine; startEvents: navigate-animate; to:" + x + " " + y + " " + z + ";");
            camera.emit("navigate-animate");
            camera.emit("navigate-navigated");
        }
    };
    return NavigateService;
}());
exports.NavigateService = NavigateService;

},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Services
var NavigateService_1 = require("./Services/NavigateService");
// Components
//import { TrackPadListenerComponent } from "./Components/TrackPadListenerComponent";
var CursorNavigateComponent_1 = require("./Components/CursorNavigateComponent");
//import { CursorNavigateComponent } from "./Components/CursorNavigateComponent";
// Controllers
var IndexController_1 = require("./Controllers/IndexController");
var NavigateModel_1 = require("./Models/NavigateModel");
// Servies
var navigateService = new NavigateService_1.NavigateService();
// Components
var cursorNavigateComponentModel = new NavigateModel_1.NavigateModel("camera", false, "click");
var cursorNavigateComponent = new CursorNavigateComponent_1.CursorNavigateComponent(cursorNavigateComponentModel, navigateService);
// Controllers
var indexController = new IndexController_1.IndexController(
//trackPadListenerComponent,
cursorNavigateComponent);
indexController.init();

},{"./Components/CursorNavigateComponent":1,"./Controllers/IndexController":2,"./Models/NavigateModel":3,"./Services/NavigateService":4}]},{},[5])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
